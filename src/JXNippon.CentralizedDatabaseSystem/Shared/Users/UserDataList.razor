@using JXNippon.CentralizedDatabaseSystem.Shared.Description
@using UserODataService.Affra.Service.User.Domain.Users

@if (!initLoading && count == 0)
{       
    <div class="min-vh-56 d-flex align-items-center justify-content-center gap-3">
        <GenericDescription Height="300px" ImageFile="@ImageFile.People" Description="No result found.">
        </GenericDescription>
    </div>
      
}
<div class="row px-3 py-2">
    <Virtualize Context="context" ItemsProvider="@LoadDataAsync" TItem=User ItemSize=50 OverscanCount=10 @ref=@this.virtualize>
        <Placeholder>
            <div class="col-sm-12 col-md-4 py-2 pr-1" style="min-height:200px;">
                <Card Class="h-100">
                    <Body>
                        <Skeleton Active></Skeleton>
                    </Body>
                </Card>  
            </div>    
        </Placeholder>
        <ItemContent>
            <div class="col-sm-12 col-md-4 py-2 pr-1" style="min-height:200px;">
                <Card Style="min-height:200px;" Class="data-list-card">
                        <TitleTemplate>
                           <div class="d-flex flex-row align-items-center">
                                <div>
                                    <span class="mb-0 title" href="#"><Icon Type="user" Theme="outline" Class="anticon-big"/> @(context.Name)</span>
                                </div>
                           </div>
                        </TitleTemplate>
                        <Body>
                           <div class="d-flex flex-row align-items-center">
                                <div>
                                    <Space>
                                        <SpaceItem>
                                            <Avatar Src=@this.GetAvatarIcon(context.UserPersonalization) Style=@($"vertical-align: middle; background-color: {context.UserPersonalization?.AvatarColor};") Size="64">
                                                <span style="font-size: 32px;">@this.UserService.GetAvatarName(context.Name)</span>
                                             </Avatar>
                                        </SpaceItem>
                                        <SpaceItem>                                                                             
                                            <div style="word-break:break-word;">Email : @context.Email</div>
                                            <div style="word-break:break-word;">Role : @context.Role</div>
                                        </SpaceItem>
                                    </Space>

                                </div>
                            </div>
                            <hr style="border: none; background-color: rgba(0,0,0,.08); height: 1px; margin: 1rem 0;" />
                            <div class="row">
                                <div class="col-md-8 text-truncate card-time">
                                    <b>@string.Format(System.Globalization.CultureInfo.CurrentCulture, "Created : {0:d}", context.CreatedDateTime.ToLocalTime())</b>
                                </div>
                                <div class="col-md-4 text-right">
                                    @if (context.Status == UserStatus.Active)
                                    {
                                        <RadzenBadge BadgeStyle="BadgeStyle.Success" Text="@(context.Status.ToString())"/>
                                    }
                                    else
                                    {
                                        <RadzenBadge BadgeStyle="BadgeStyle.Danger" Text="@(context.Status.ToString())"/>
                                    }
                                    
                                </div>
                            </div>
                        </Body>
                        <ActionTemplate>
                            @if(isUserHavePermission)
                            {
                                <CardAction><Tooltip Title=@("Edit...")><Icon Class="anticon-big" Type="edit" OnClick="@(() => ShowDialogAsync(context, 1, "Edit"))"/></Tooltip></CardAction>
                            }
                            <CardAction><Tooltip Title=@("View Activities...")><Icon Class="anticon-big" Type="eye" OnClick="@(() => ShowActivityDialogAsync(context))"/></Tooltip></CardAction>
                        </ActionTemplate>
                    </Card> 
            </div>        
        </ItemContent>
    </Virtualize>
</div>