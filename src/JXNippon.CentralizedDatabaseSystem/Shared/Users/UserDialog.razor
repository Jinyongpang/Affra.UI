@using JXNippon.CentralizedDatabaseSystem.Domain.Users
@using UserODataService.Affra.Service.User.Domain.Users

<RadzenTemplateForm Data="@Item" Submit="@( async (User args) => { await SubmitAsync(args); })">
    <div class="row">
        <div class="col">
            @if (this.IsUserEdit)
            {
                <div class="row py-2">
                    <div class="col-4 align-items-center d-flex">
                        <RadzenLabel class="dialogTextSize" Text="Color" />
                    </div>
                    <div class="col-8">
                        <RadzenColorPicker Name="AvatarColor" class="w-100" Placeholder="Select color..." @bind-Value="@this.userPersonalization.AvatarColor" Disabled=@isViewing></RadzenColorPicker>
                    </div>
                </div> 
                <div class="row py-2">
                    <div class="col-4 align-items-center d-flex">
                        <RadzenLabel class="dialogTextSize" Text="Avatar" />
                    </div>
                    <div class="col-8">
                        <div class="row">
                            @foreach(var ava in availableAvatar)
                            {
                                <div class="col-1" @onclick=@(() => this.OnSelect(ava))>
                                    <Avatar Src=@($"avatar\\{ava}.png") Style=@($"vertical-align: middle; background-color: {(this.userPersonalization.AvatarId == ava ? this.userPersonalization.AvatarColor : "Transparent")};") Size="large">
                                        <span style="font-size: 16px;"></span>
                                    </Avatar>
                                </div>                          
                            }
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="row py-2">
                    <div class="col-4 align-items-center d-flex">
                        <RadzenLabel class="dialogTextSize" Text="Role" />
                    </div>
                    <div class="col-8">
                        <RadzenDropDown Name="Role" class="w-100" Placeholder="Select role..." Data=@roles @bind-Value="@Item.Role" Disabled=@isViewing></RadzenDropDown>
                        <RadzenRequiredValidator Component="Role" Text="Role is required" Popup=false/>
                    </div>
                </div>
            }
            
            <div class="row justify-content-center py-4" hidden=@isViewing>
                <div class="col-md-12 d-flex align-items-end justify-content-center">
                    <Button HtmlType="submit" Type="primary" Size="@("large")" Disabled=@isViewing>
                        <ChildContent>
                            <Icon Type="save" Theme="outline" Class="anticon-big" />
                            <span style="font-size: 18px; margin-left: 10px;">Save</span>
                        </ChildContent>
                    </Button>
                    <Button Style="display: inline-block; margin-left: 10px;" Size="@("large")" OnClick="@Cancel">
                        <ChildContent>
                            <Icon Type="close-circle" Theme="outline" Class="anticon-big" />
                            <span style="font-size: 18px; margin-left: 10px;">Cancel</span>
                        </ChildContent>
                    </Button>
                </div>
            </div>
        </div>
    </div>
</RadzenTemplateForm>
