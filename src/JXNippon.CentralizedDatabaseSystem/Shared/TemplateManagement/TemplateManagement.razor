@using AntDesign;
@using JXNippon.CentralizedDatabaseSystem.Domain.Views
@using JXNippon.CentralizedDatabaseSystem.Shared.OIMSummary
@using JXNippon.CentralizedDatabaseSystem.Shared.ResourceFiles
@using ViewODataService.Affra.Service.View.Domain.Templates

@inject IViewService ViewService
@inject IStringLocalizer<Resource> StringLocalizer

<Layout Class="layout-view" Style="height: 80vh;">
    <Sider Width=400>
        <Layout Style="height: 100%;">
            <Header>Table</Header>
            <Content style="overflow-y: auto; max-height: 100%;">
                <Menu @ref=menu Mode="MenuMode.Inline" OnMenuItemClicked=OnSelectAsync DefaultSelectedKeys="@(new string[] { "DailyAnalysisResult"})">
                    @{
                        var types = ViewService.GetTypeMapping()
                                    .Select(x => x.Key)
                                    .ToHashSet();
                        foreach (var type in types
                            .Where(x => x != "DailyUtilityBase"))
                        {
                            <MenuItem Key=@type>@this.StringLocalizer[type]</MenuItem>
                        }
                    }
                </Menu>             
            </Content>
        </Layout>
    </Sider>
    <Layout Style="height:100%;">
        <Header Style="border-left: 1px solid #dbe0ea">
            <div class="row">
                <div class="col-6">
                    <span>Custom columns</span>
                </div>    
                <div class="col-6 float-right align-items-center text-right mt-1">
                    <Button Type="primary" Size="@("large")" Shape="@ButtonShape.Round"
                     OnClick=AddDialogAsync>
                       <ChildContent>
                           <Icon Type="plus-circle" Theme="outline" Class="anticon-big"/><span style="font-size: 18px; margin-left: 10px;">Add</span>
                       </ChildContent>
                    </Button>
                </div>
             </div>       
        </Header>
        <Content Style="height:100%;">
            <TemplateManagementGrid @ref=templateManagementGrid PagerAlwaysVisible/>
        </Content>
    </Layout>
</Layout>

@code {

    ITable table;
    Menu menu;
    TemplateManagementGrid templateManagementGrid;
    string tableName { get { return menu?.SelectedKeys?.FirstOrDefault() ?? null; } }

    private Task OnSelectAsync(MenuItem menuItem)
    {
        templateManagementGrid.TableName = menuItem.Key;
        return templateManagementGrid.ReloadAsync();
    }

    private Task AddDialogAsync()
    {
        return this.templateManagementGrid.ShowDialogAsync(
                                new CustomColumn() { Table = tableName},
                                0,
                                "Add");
    }
}