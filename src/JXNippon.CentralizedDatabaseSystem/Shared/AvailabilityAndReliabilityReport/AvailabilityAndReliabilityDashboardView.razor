@using AntDesign;
@using CentralizedDatabaseSystemODataService.Affra.Service.CentralizedDatabaseSystem.Domain.AvailabilityAndReliabilityReport;
@using JXNippon.CentralizedDatabaseSystem.Shared.Description
@using System.Reflection;

<Layout Class="layout-view">
    <Sider Width="150" >
        <Layout Style="height: 100%;background-color: white;">
            <Header>
                <div class="row">
                    <div class="col-6">
                        <span>Year</span>
                    </div>
                </div>
            </Header>
            <Content style="overflow-y: auto; max-height: 100%;">
                @if (YearList is not null && YearList.Count > 0)
                {
                    <Menu DefaultSelectedKeys=@(new[] { YearList[0].ToString() }) DefaultOpenKeys=@(new[] { YearList[0].ToString() }) @ref=@menu Style="height: 100%;" Mode=@MenuMode.Inline OnMenuItemClicked=OnMenuItemSelectAsync>
                        @foreach (int yearItem in YearList)
                        {
                            <MenuItem Key="@yearItem.ToString()"><span style="font-size: 16px; margin-left: 0px;">@yearItem.ToString()</span></MenuItem>
                        }
                    </Menu>
                }
            </Content>
        </Layout>
    </Sider>
    <Layout Style="height:100%;">
        <Header Style="border-left: 1px solid #dbe0ea">
            <div class="row">
                <div class="col-6">
                    <span>Monthly Availability And Reliability Dashboard</span>
                </div>
            </div>
        </Header>
        <Content Style="height:100%;background-color: white;">
            @if(this.HIPAvailabilityItems is not null)
            {
                <AvailabilityAndReliabilityDashboardTableView Year="@HIPAvailabilityItems.Year">
                    <AvailabilityAndReliabilityDashboardTableRow Title="HIP" Measure="Availability" RowSpan="2">
                        @for (int i = 0; i < PropertyNames.Length; i++)
                        {
                            <DoubleMonthlyAvailabilityAndReliabilityDashboardDataItem Percentage="GetYearlyPropertyValue(this.HIPAvailabilityItems, PropertyNames[i].ToString())" />
                        }
                    </AvailabilityAndReliabilityDashboardTableRow>
                    <AvailabilityAndReliabilityDashboardTableRow Measure="Reliability">
                        @for (int i = 0; i < PropertyNames.Length; i++)
                        {
                            <DoubleMonthlyAvailabilityAndReliabilityDashboardDataItem Percentage="GetYearlyPropertyValue(this.HIPReliabilityItems, PropertyNames[i].ToString())" />
                        }
                    </AvailabilityAndReliabilityDashboardTableRow>

                    <AvailabilityAndReliabilityDashboardTableRow Title="Layang" Measure="Availability" RowSpan="2">
                        @for (int i = 0; i < PropertyNames.Length; i++)
                        {
                            <DoubleMonthlyAvailabilityAndReliabilityDashboardDataItem Percentage="GetYearlyPropertyValue(this.LayangAvailabilityItems, PropertyNames[i].ToString())" />
                        }
                    </AvailabilityAndReliabilityDashboardTableRow>
                    <AvailabilityAndReliabilityDashboardTableRow Measure="Reliability">
                        @for (int i = 0; i < PropertyNames.Length; i++)
                        {
                            <DoubleMonthlyAvailabilityAndReliabilityDashboardDataItem Percentage="GetYearlyPropertyValue(this.LayangReliabilityItems, PropertyNames[i].ToString())" />
                        }
                    </AvailabilityAndReliabilityDashboardTableRow>

                    <AvailabilityAndReliabilityDashboardTableRow Title="FPSO" Measure="Availability" RowSpan="2">
                        @for (int i = 0; i < PropertyNames.Length; i++)
                        {
                            <DoubleMonthlyAvailabilityAndReliabilityDashboardDataItem Percentage="GetYearlyPropertyValue(this.FPSOAvailabilityItems, PropertyNames[i].ToString())" />
                        }
                    </AvailabilityAndReliabilityDashboardTableRow>
                    <AvailabilityAndReliabilityDashboardTableRow Measure="Reliability">
                        @for (int i = 0; i < PropertyNames.Length; i++)
                        {
                            <DoubleMonthlyAvailabilityAndReliabilityDashboardDataItem Percentage="GetYearlyPropertyValue(this.FPSOReliabilityItems, PropertyNames[i].ToString())" />
                        }
                    </AvailabilityAndReliabilityDashboardTableRow>

                    <AvailabilityAndReliabilityDashboardTableRow Title="Average" Measure="Availability" RowSpan="2">
                        @for (int i = 0; i < PropertyNames.Length; i++)
                        {
                            <DoubleMonthlyAvailabilityAndReliabilityDashboardDataItem Percentage="GetYearlyPropertyValue(this.AverageAvailabilityItems, PropertyNames[i].ToString())" />
                        }
                    </AvailabilityAndReliabilityDashboardTableRow>
                    <AvailabilityAndReliabilityDashboardTableRow Measure="Reliability">
                        @for (int i = 0; i < PropertyNames.Length; i++)
                        {
                            <DoubleMonthlyAvailabilityAndReliabilityDashboardDataItem Percentage="GetYearlyPropertyValue(this.AverageReliabilityItems, PropertyNames[i].ToString())" />
                        }
                    </AvailabilityAndReliabilityDashboardTableRow>

                    <AvailabilityAndReliabilityDashboardTableRow Title="" Measure="Target" RowSpan="1">
                        @for (int i = 0; i < PropertyNames.Length; i++)
                        {
                            <DoubleMonthlyAvailabilityAndReliabilityDashboardDataItem Percentage="GetYearlyPropertyValue(this.TargetItems, PropertyNames[i].ToString())" />
                        }
                    </AvailabilityAndReliabilityDashboardTableRow>
                </AvailabilityAndReliabilityDashboardTableView>
            }
            else
            {
                <div class="min-vh-56 d-flex align-items-center justify-content-center gap-3">
                    <GenericDescription Height="250px" ImageFile="@ImageFile.NoData" Description="No facilities data created.">
                    </GenericDescription>
                </div>
            }
        </Content>
    </Layout>
</Layout>