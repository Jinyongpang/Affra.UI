@using System.Linq.Dynamic.Core
@using System.Dynamic
@using System.ComponentModel
@using AntDesign.TableModels
@using JXNippon.CentralizedDatabaseSystem.Domain.Interfaces
@using JXNippon.CentralizedDatabaseSystem.Domain.Views
@using JXNippon.CentralizedDatabaseSystem.Models

<RadzenDataGrid @ref="grid" IsLoading="@isLoading" Count="@this.Count" Data="@this.itemsDictionary" LoadData="@this.LoadDataAsync" 
    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowSorting="true" AllowFiltering="false"
    AllowColumnResize="true" Style="height: 45vh;" 
    AllowMultiColumnSorting="false" ShowMultiColumnSortingIndex="false" AllowVirtualization CellRender=@this.CellRender ColumnWidth="75px">
    <Columns>
        @foreach(var gridColumn in GridColumns)
        {
            var isSortable = gridColumn.Property == "Date"
                || gridColumn.Property == "DateUI";

            var sortString = gridColumn.Property == "DateUI"
                ? "Date"
                : gridColumn.Property;

            var propertyName = $"{gridColumn.Type}{gridColumn.Property}";
            <RadzenDataGridColumn TItem="IDictionary<string, object>" Property="@propertyName" Title="@(gridColumn.Title)" FormatString="@(gridColumn.FormatString)" Sortable=@isSortable SortProperty="@sortString">
                <Template>                  
                    @if(context.TryGetValue(propertyName, out object value))
                    {
                        @this.GetResultString(gridColumn, value);
                    }                  
                </Template>
            </RadzenDataGridColumn>
        }             
    </Columns>
</RadzenDataGrid>

@if (!this.isLoading && Count == 0)
{

    <Empty Style="position:absolute; top: 40%; left: calc(50% - 92px);"></Empty>    

}