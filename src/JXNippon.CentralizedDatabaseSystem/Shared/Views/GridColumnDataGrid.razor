@using JXNippon.CentralizedDatabaseSystem.Domain.Grids
@using ViewODataService.Affra.Service.View.Domain.Views

<div class="row">
    <div class="col">
        <RadzenDataGrid @ref="grid" Data="@items"
            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowSorting="true" AllowFiltering="false" AllowPaging="true" 
            PageSize="10" PagerHorizontalAlign="HorizontalAlign.Center" TItem="GridColumn" 
            AllowColumnResize="true" ShowPagingSummary="true" CellContextMenu="@OnCellContextMenu"
            AllowMultiColumnSorting="true" ShowMultiColumnSortingIndex="true"
            PagerAlwaysVisible="@PagerAlwaysVisible">
            <EmptyTemplate>                
                <div class="row" @oncontextmenu=@(args => OnCellContextMenu(args)) @oncontextmenu:preventDefault="true">
                    <a>No records to display.</a>
                </div>                    
            </EmptyTemplate>
            <Template Context="gridColumn">
                <GridColumnStyleDataGrid GridColumn=gridColumn PagerAlwaysVisible=true>
                </GridColumnStyleDataGrid>
            </Template>
            <Columns>
                <RadzenDataGridColumn TItem="GridColumn" Property="Title" Title="Title">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="GridColumn" Property="Property" Title="Property">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="GridColumn" Property="FormatString" Title="FormatString">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="GridColumn" Property="Type" Title="Type">
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>  
    </div>
</div>

@code
{
    private void OnCellContextMenu(MouseEventArgs args)
    {
        bool hasRowData = (args as DataGridCellMouseEventArgs<GridColumn>) != null;
        ContextMenuService.Open(args, ds =>
           @<RadzenMenu Click="@(e => OnMenuItemClickAsync(args as DataGridCellMouseEventArgs<GridColumn>, e))">
                <RadzenMenuItem Text="Add ..." Value="0" Icon="note_add"/>
                <RadzenMenuItem Text="Edit ..." Value="1" Icon="description" Visible=@hasRowData/>
                <RadzenMenuItem Text="Delete ..." Value="2" Icon="delete" Visible=@hasRowData/>
                <RadzenMenuItem Text="View ..." Value="3" Icon="launch" Visible=@hasRowData/>
    </RadzenMenu>
    );  
    }

    private async Task OnMenuItemClickAsync(DataGridCellMouseEventArgs<GridColumn> args, MenuItemEventArgs e)
    {  
        int i = (int)e.Value;
        if (i == 0)
        {
            await ShowDialogAsync(
                new GridColumn(),
                i,
                "Add");
        }
        else if (i == 1)
        {
            await ShowDialogAsync(args.Data, i, "Edit");
        }
        else if (i == 2)
        {
            await ShowDialogAsync(args.Data, i, "Delete");
        }
        else if (i == 3)
        {
            await ShowDialogAsync(args.Data, i, "View");
        }
    }
}