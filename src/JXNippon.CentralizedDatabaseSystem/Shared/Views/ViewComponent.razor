@using System.Text.Json;
@using JXNippon.CentralizedDatabaseSystem.Domain.Grids
@using JXNippon.CentralizedDatabaseSystem.Domain.Views
@using JXNippon.CentralizedDatabaseSystem.Domain.Charts
@using ViewODataService.Affra.Service.View.Domain.Views

@inject IViewService ViewService

@foreach(var row in View.Rows)
{
    <div class="row">

        @if (row.Columns is null
            || row.Columns.Count == 0)
        {
             <div class="col py-3">
                    <RadzenCard></RadzenCard>  
             </div> 
        }

        @foreach(var col in row.Columns) 
        {      
            if (col.ComponentType ==  nameof(Chart))
            {
                Chart chart = JsonSerializer.Deserialize<Chart>(col.ColumnComponent);
                string type = ViewService.GetTypeMapping()[chart.Type];
                <div class="col py-3">
                    <RadzenCard>                  
                        <ChartComponent @ref="@chartComponentRef"  Title=@chart.Title Icon=@chart.Icon StartDate="@StartDate" EndDate="@EndDate" TType="@type" AxisTitle="@chart.AxisTitle" FormatString="@chart.FormatString" 
                        Step="@TimeSpan.FromMinutes(chart.StepInMinutes)" ValueAxisStep="@chart.ValueAxisStep" ChartSeries="@chart.ChartSeries"></ChartComponent></RadzenCard>  
                </div> 
            }
            else if (col.ComponentType ==  nameof(Grid))
            {
                Grid grid = JsonSerializer.Deserialize<Grid>(col.ColumnComponent);
                string type = ViewService.GetTypeMapping()[grid.Type];
                <div class="col py-3">
                    <RadzenCard>                  
                        <DataGridComponent @ref="@gridComponentRef" TType="@type" Title=@grid.Title Icon=@grid.Icon StartDate="@StartDate" EndDate="@EndDate" GridColumns="@grid.GridColumns"></DataGridComponent>   
                    </RadzenCard>  
                </div> 
            }
        }
    </div>
}
